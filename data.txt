 
 10
 adj = addEdge(adj,1,1,2);
 adj = addEdge(adj,1,1,3);
 adj = addEdge(adj,1,1,4);
 adj = addEdge(adj,1,1,5);
 adj = addEdge(adj,1,1,6);
 adj = addEdge(adj,1,1,7);
 adj = addEdge(adj,1,1,8);
 adj = addEdge(adj,1,1,9);
 adj = addEdge(adj,1,1,10);
 adj = addEdge(adj,1,1,11);
 adj = addEdge(adj,2,1,3);
 adj = addEdge(adj,2,1,4);
 adj = addEdge(adj,2,1,5);
 adj = addEdge(adj,2,1,6);
 adj = addEdge(adj,2,1,7);
 adj = addEdge(adj,2,1,8);
 adj = addEdge(adj,2,1,9);
 adj = addEdge(adj,2,1,10);
 adj = addEdge(adj,2,1,11);
 adj = addEdge(adj,3,1,4);
 adj = addEdge(adj,3,1,5);
 adj = addEdge(adj,3,1,6);
 adj = addEdge(adj,3,1,7);
 adj = addEdge(adj,3,1,8);
 adj = addEdge(adj,3,1,9);
 adj = addEdge(adj,3,1,10);
 adj = addEdge(adj,3,1,11);
 adj = addEdge(adj,4,1,5);
 adj = addEdge(adj,4,1,6);
 adj = addEdge(adj,4,1,7);
 adj = addEdge(adj,4,1,8);
 adj = addEdge(adj,4,1,9);
 adj = addEdge(adj,4,1,10);
 adj = addEdge(adj,4,1,11);
 adj = addEdge(adj,5,1,6);
 adj = addEdge(adj,5,1,7);
 adj = addEdge(adj,5,1,8);
 adj = addEdge(adj,5,1,9);
 adj = addEdge(adj,5,1,10);
 adj = addEdge(adj,5,1,11);
 adj = addEdge(adj,6,1,7);
 adj = addEdge(adj,6,1,8);
 adj = addEdge(adj,6,1,9);
 adj = addEdge(adj,6,1,10);
 adj = addEdge(adj,6,1,11);
 adj = addEdge(adj,7,1,8);
 adj = addEdge(adj,7,1,9);
 adj = addEdge(adj,7,1,10);
 adj = addEdge(adj,7,1,11);
 adj = addEdge(adj,8,1,9);
 adj = addEdge(adj,8,1,10);
 adj = addEdge(adj,8,1,11);
 adj = addEdge(adj,9,1,10);
 adj = addEdge(adj,9,1,11);
 adj = addEdge(adj,10,1,12);
///////////////////////////////////////////////////////////////////////////////////

4 

correct answer
===============Join================
The node: 0----3--->connected node:  207
The node: 0----2--->connected node:  207
The node: 207----3--->connected node:  0
The node: 207----2--->connected node:  0

adj = addEdge(adj,1,2,2); 
adj = addEdge(adj,1,-1,3); 
adj = addEdge(adj,1,-1,4); 
adj = addEdge(adj,2,-1,3); 
adj = addEdge(adj,2,4,4);
adj = addEdge(adj,3,-1,4);


3
///

adj = addEdge(adj,1,-2,2); 
adj = addEdge(adj,1,-1,3); 
adj = addEdge(adj,2,12,3);

Returning from cut
Values ken.bo: 12
Values one.bo: 9
===============Cut================
The node: 2----12--->connected node:  3
The node: 3----12--->connected node:  2
===============Join================
The node: 0----12--->connected node:  105
The node: 105----12--->connected node:  0




4-- 2 partisions 
dj = addEdge(adj,1,2,2); 
adj = addEdge(adj,1,-1,3); 
adj = addEdge(adj,1,-1,4);
adj = addEdge(adj,2,-1,3); 
adj = addEdge(adj,2,-1,4);
adj = addEdge(adj,3,4,4);
raph = depth_search(adj,graph,4,0,0); 

output 
Returning from cut
Values ken.bo: 2
Values one.bo: 6
===============Cut================
The node: 0----2--->connected node:  103
The node: 3----4--->connected node:  4
The node: 4----4--->connected node:  3
The node: 4-----2--->connected node:  103
The node: 103----2--->connected node:  0
The node: 103-----2--->connected node:  4
===============Join================
The node: 0----2--->connected node:  103
The node: 0----4--->connected node:  107
The node: 103----2--->connected node:  0
The node: 103-----2--->connected node:  107
The node: 107----4--->connected node:  0
The node: 107-----2--->connected node:  103
///////


6
Total value of all postive numbers is 18 
The bound we get is 14
with 2 clusters. 
===============Join================
The node: 0--- -3--->connected node:  310
The node: 0--- 4--->connected node:  310
The node: 0--- 5--->connected node:  310
The node: 0--- 8--->connected node:  111
The node: 111--- 8--->connected node:  0
The node: 111--- -4--->connected node:  310
The node: 310--- -3--->connected node:  0
The node: 310--- 4--->connected node:  0
The node: 310--- 5--->connected node:  0
The node: 310--- -4--->connected node:  111

graph = depth_search(adj,graph,1,0,0); 
adj = addEdge(adj,1,5,2); 
adj = addEdge(adj,1,-1,3); 
adj = addEdge(adj,1,-1,4);
adj = addEdge(adj,1,-1,5);
adj = addEdge(adj,1,-1,6);
adj = addEdge(adj,2,5,3);
adj = addEdge(adj,2,-1,4);
adj = addEdge(adj,2,-1,5); 
adj = addEdge(adj,2,-1,6); 
adj = addEdge(adj,3,-1,4);
adj = addEdge(adj,3,-1,5);
adj = addEdge(adj,3,-1,6);
adj = addEdge(adj,4,-1,5);
adj = addEdge(adj,4,-1,6);
adj = addEdge(adj,5,8,6);




6 - 
Join everything case: base case 
adj = addEdge(adj,1,5,2); 
adj = addEdge(adj,1,1,3); 
adj = addEdge(adj,1,1,4);
adj = addEdge(adj,1,1,5);
adj = addEdge(adj,1,1,6);
adj = addEdge(adj,2,5,3);
adj = addEdge(adj,2,1,4);
adj = addEdge(adj,2,1,5); 
adj = addEdge(adj,2,1,6); 
adj = addEdge(adj,3,1,4);
adj = addEdge(adj,3,1,5);
adj = addEdge(adj,3,1,6);
adj = addEdge(adj,4,1,5);
adj = addEdge(adj,4,1,6);
adj = addEdge(adj,5,8,6);